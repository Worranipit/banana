import pygame
import math
import random


pygame.init()
WIDTH, HEIGHT = 800, 500
win = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Hangman Game")
pygame.display.set_caption("HangmanGame")
Icon = pygame.image.load("Iconss.png")
pygame.display.set_icon(Icon)

# (Width - ((Gap + Radius * 2)*13)/2
RADIUS = 20
GAP = 15
letters = []
startx = round((WIDTH - (RADIUS * 2 + GAP) * 13) / 2)
starty = 400
A = 65
for i in range(26):
    x = startx + GAP * 2 + ((RADIUS * 2 + GAP) * (i % 13))
    y = starty + ((i // 13) * (GAP + RADIUS * 2))
    letters.append([x, y, chr(A + i), True])

# Letter Font
LETTER_FONT = pygame.font.SysFont('Rockwell', 30)
WORD_FONT = pygame.font.SysFont('comicsans', 60)
TITLE_FONT = pygame.font.SysFont('comicsans', 70)


images = []
for i in range(7):
    image = pygame.image.load("hangman" + str(i) + ".png")
    images.append(image)

# game
hangman_status = 0
words = ['IDE', 'REPEAT', 'PYTHON','PYGAME','COPY','PASTE','DUPLICATE','IMITATE','ORIGINAL','PASTY','TRANSITION','FONDANT','SWIM','PLASTER','ELEPHANT'
'REPUBLIC','COUNTERFEIT','TRANSCRIPT','IMITATION','MODEL','REPRODUCE','RAIN','REPLICATION','PASTEL','MUSTARD','TOOTHPASTE','PHOTOCOPY'
'CARBON','CLONE','RECOPY','BAND','WARRIOR','REPRODUCTION','PIRATE','TRACE','REPLICATE','WATER','DOG','PHOTO','SPARKLE','MILO','PRINT','PROOF','SIMPLIFY'
,'MINIMUM','MAGMA','EXTRACT','ELECTROTYPE','SCRIPT','PARIS','IMAGE','PAST','CARBON','TALL','CHOCOLATE','GLAZE','BLAZE','STONE','MAXIMIZE','SAD','SITUATION','SCIENTIST']


word = random.choice(words)
guessed = []


WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)
GREY = (128,128,128)


def draw():
    win.fill(GREY)


    text = TITLE_FONT.render("HANGMAN", 1, RED)
    win.blit(text, (WIDTH / 2 - text.get_width() / 2, 20))#Method to get character in the middle of button

    #Word
    display_word = ""
    for letter in word:
        if letter in guessed:
            display_word += letter + " "
        else:
            display_word += "_ "
    text = WORD_FONT.render(display_word, 1, BLACK)
    win.blit(text, (400, 200))

    #draw buttons
    for letter in letters:
        x, y, ltr, visible = letter
        if visible:
            pygame.draw.circle(win, BLACK, (x, y), RADIUS, 3)
            text = LETTER_FONT.render(ltr, 1, BLUE)
            win.blit(text, (x - text.get_width() / 2, y - text.get_height() / 2))

    win.blit(images[hangman_status], (150, 100))
    pygame.display.update()

#massage
def display_message(message):
    pygame.time.delay(1000)
    win.fill(WHITE)
    text = WORD_FONT.render(message, 1, BLACK)
    win.blit(text, (WIDTH / 2 - text.get_width() / 2, HEIGHT / 2 - text.get_height() / 2))
    pygame.display.update()
    pygame.time.delay(3000)



def main():
    global hangman_status

    FPS = 60
    clock = pygame.time.Clock()


    while True:
        clock.tick(FPS) #Set speed

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                quit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                m_x, m_y = pygame.mouse.get_pos() #Get Position of Mouse
                for letter in letters:
                    x, y, ltr, visible = letter
                    if visible:
                        dis = math.sqrt((x - m_x) ** 2 + (y - m_y) ** 2) #Find the distance near the radius
                        if dis < RADIUS:
                            letter[3] = False
                            guessed.append(ltr)
                            if ltr not in word:
                                hangman_status += 1

        draw()

        won = True
        for letter in word:
            if letter not in guessed:
                won = False
                break

        if won:
            display_message("You WON!")
            quit()
            break

        if hangman_status == 6:
            display_message('The correct word is ')
            display_message(word)
            display_message("You LOST!")
            quit()
            break


while True:
    main()
pygame.quit()
